name: build sink service docker

on:
  push:
    branches:
      - master
    paths:
      - 'docker/sink_service/Dockerfile'
      - 'sink_service/**'
      - '.github/workflows/docker_sink_service.yml'

  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to push on docker hub'
        required: true

  release:
    types: [created]

env:
  IMAGE_NAME: 'wirepas/gateway_sink_service'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: get c-mesh-api with submodule
        run: git submodule update --init

      - name: Set up QEMU
        run: sudo apt-get update && sudo apt-get install qemu-user-static -y

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/sink_service/Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: GATEWAY_BUILD_SHA1= ${{ github.sha }}
          outputs: type=image,"name=${{ env.IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_NAME=${platform//\//-}" >> $GITHUB_ENV
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_NAME }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set tag for push
        if: github.event_name == 'push'
        run: echo "TAGS=\"-t $IMAGE_NAME:edge\"" >> $GITHUB_ENV

      - name: Set tag for manually triggered
        if: github.event_name == 'workflow_dispatch'
        run: echo "TAGS=\"-t $IMAGE_NAME:${{ github.event.inputs.tag }}\"" >> $GITHUB_ENV

      - name: Set tag for release version
        if: github.event_name == 'release'
        run: echo "TAGS=\"-t $IMAGE_NAME:${{ github.event.release.tag_name }}\"" >> $GITHUB_ENV

      - name: Set additionnal latest tag also for official release
        if: github.event_name == 'release' && !contains(github.event.release.tag_name, 'rc')
        run: echo "TAGS=\"$TAGS -t $IMAGE_NAME:latest\"" >> $GITHUB_ENV

      - name: Check tags
        run: echo "$TAGS"

      - name: Check digests
        run: ls -l ${{ runner.temp }}/digests

      # - name: Create manifest list and push
      #   working-directory: ${{ runner.temp }}/digests
      #   run: |
      #     docker buildx imagetools create ${{ env.TAGS }} \
      #       $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)

