ARG BASE_IMAGE=python:3.13-alpine
FROM $BASE_IMAGE AS builder

RUN adduser --disabled-password wirepas

RUN apk add --no-cache \
		build-base \
		# Needed for the wheel generation:
		bash \
		dpkg \
		# Needed for dbus_c.c:
		elogind-dev \
		# Needed for PyGObject:
		cairo-dev \
		gobject-introspection-dev

RUN python3 -m pip install wheel setuptools pkgconfig

USER wirepas
WORKDIR /home/wirepas

COPY --chown=wirepas ./python_transport /home/wirepas/python_transport
WORKDIR /home/wirepas/python_transport

RUN ./utils/generate_wheel.sh

USER wirepas

# Needed by pydbus
RUN pip3 install PyGObject~=3.0 --user

# Install protobuf from source to get the UPB implementation
RUN pip3 install dist/wirepas_gateway*.whl --no-binary protobuf --user

# Special target to extract binaries
FROM scratch AS export
COPY --from=builder /home/wirepas/python_transport/dist/*.tar.gz .


# Build the final image with prebuilt wmm image
FROM $BASE_IMAGE AS runner

RUN adduser --disabled-password wirepas

# Variable set from CI
ARG GATEWAY_BUILD_SHA1=unset

RUN apk add --no-cache libelogind glib gobject-introspection

USER wirepas

ENV PATH="/home/wirepas/.local/bin:${PATH}"

# Copy the built wheel and its dependencies from builder
COPY --from=builder /home/wirepas/.local /home/wirepas/.local

# Sanity check to confirm we have the UPB implementation for protobuf
RUN python3 -c "import sys;\
from google.protobuf.internal import api_implementation;\
sys.exit(0 if api_implementation.Type() == 'upb' else 1)"

CMD ["wm-gw"]

LABEL com.wirepas.gateway.build.sha1="${GATEWAY_BUILD_SHA1}"
